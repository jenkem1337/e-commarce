services:
  php-proxy:
    container_name: php-proxy
    build:
      context: .
      dockerfile: Dockerfile.PHP-Proxy
    ports:
      - "8000:80"
    networks:
      - e-commarce-network
    restart: always
    depends_on:
      - php-backend-fpm
      - minio
  
  php-backend-fpm:
    container_name: php-backend-fpm
    build:
      context: .
      dockerfile: Dockerfile.PHP-FPM
    networks:
      - e-commarce-network
    depends_on:
      - minio
    
    restart: always
  
  php-order-saga-consumer:
    container_name: php-order-saga-consumer
    build:
      context: .
      dockerfile: Dockerfile.OrderSagaBrokerController
    networks:
      - e-commarce-network
    restart: always
   
  
  #php-async-processor-consumer:
  #  container_name: php-async-processor-consumer
  #  build:
  #    context: .
  #    dockerfile: Dockerfile.AsyncProcessorBrokerController
  #  networks:
  #    - e-commarce-network
  #  restart: always

  checkout-projection-broker:
    image: apache/kafka:latest
    container_name: checkout-projection-broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://checkout-projection-broker:9092,CONTROLLER://checkout-projection-broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://checkout-projection-broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@checkout-projection-broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

    networks:
      - e-commarce-network
    expose:
      - "9092"
      - "9093"

  order-saga-broker:
    image: apache/kafka:latest
    container_name: order-saga-broker
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://order-saga-broker:9092,CONTROLLER://order-saga-broker:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://order-saga-broker:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@order-saga-broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    networks:
      - e-commarce-network
    expose:
      - "9092"
      - "9093"

  #async-processor-broker:
  #  image: apache/kafka:latest
  #  container_name: async-processor-broker
  #  environment:
  #    KAFKA_NODE_ID: 1
  #    KAFKA_PROCESS_ROLES: broker,controller
  #    KAFKA_LISTENERS: PLAINTEXT://async-processor-broker:9092,CONTROLLER://async-processor-broker:9093
  #    KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://async-processor-broker:9092
  #    KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #    KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  #    KAFKA_CONTROLLER_QUORUM_VOTERS: 1@async-processor-broker:9093
  #    KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #    KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  #    KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #    KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  #    KAFKA_NUM_PARTITIONS: 3
  #    KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

  #  networks:
  #    - e-commarce-network
  #  expose:
  #    - "9092"
  #    - "9093"


  checkout-write-service:
    image: hasancansahan/checkout-write-side-service
    container_name: checkout-write-service
    ports:
      - "3000:3000"
    restart: always
    networks:
      - e-commarce-network
    depends_on:
      - checkout-projection-broker
      - order-saga-broker
  
  checkout-read-service:
    image: hasancansahan/checkout-read-side-service
    container_name: checkout-read-service
    ports:
      - "3001:3000"
    restart: always
    networks:
      - e-commarce-network
    depends_on:
      - checkout-projection-broker
  
  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ROOTNAME
      MINIO_ROOT_PASSWORD: CHANGEME123
    volumes:
      - D:/minio/data:/data
    command: server /data --console-address ":9001"
    networks:
      - e-commarce-network

    
networks:
  e-commarce-network:
  